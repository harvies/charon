apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: blog
  name: blog
  namespace: blog
spec:
  storageClassName: nfs-client
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: blog
  name: blog
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: blog
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9527"
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        app: blog
    spec:
      containers:
        - env:
            - name: TZ
              value: Asia/Shanghai
            - name: ES_JAVA_OPTS
              value: "-Xms1g -Xmx1g"
            - name: SERVER_PORT
              value: "8090"
            - name: SPRING_DATASOURCE_DRIVER_CLASS_NAME
              value: com.mysql.cj.jdbc.Driver
            - name: SPRING_DATASOURCE_URL
              value: jdbc:mysql://test-leader.mysql.svc.cluster.local:3306/halodb?characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
            - name: SPRING_DATASOURCE_USERNAME
              value: root_rw
            - name: SPRING_DATASOURCE_PASSWORD
              value: 8mx3@kHn!CYRF2G
            - name: HALO_CACHE
              value: redis
            - name: SPRING_REDIS_PORT
              value: "65379"
            - name: SPRING_REDIS_DATABASE
              value: "2"
            - name: SPRING_REDIS_HOST
              value: redis.dev.kikera.org
            - name: SPRING_REDIS_PASSWORD
              value: rnqdkWfnBHCiCQtq
          image: halohub/halo:latest
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: data
              mountPath: /root/.halo
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - sleep 15
          name: blog
          ports:
            - containerPort: 8090
              name: http
              protocol: TCP
          securityContext: { }
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: { }
      terminationGracePeriodSeconds: 30
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: blog
#          hostPath:
#            path: /root/.halo
---
apiVersion: v1
kind: Service
metadata:
  name: blog
  namespace: default
spec:
  ports:
    - port: 8090
      protocol: TCP
      targetPort: 8090
  selector:
    app: blog
  sessionAffinity: None
  type: ClusterIP