<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 此处loginService2是别名，getBean()会根据别名查到BeanId @See SimpleAliasRegistry.canonicalName()-->
    <bean id="loginService" name="loginService2"
          class="io.github.harvies.charon.tests.spring.service.impl.LoginServiceImpl" init-method="init"
          destroy-method="myDestroy">
        <property name="properties1" value="111"/>
    </bean>
    <bean id="myBeanPostProcessor" class="io.github.harvies.charon.tests.spring.support.MyBeanPostProcessor"/>

    <!--构造器注入-->
    <bean id="constructorInjectTest" class="io.github.harvies.charon.tests.spring.inject.ConstructorInjectTest">
        <constructor-arg name="message" value="messageTest"/>
    </bean>
    <!--setter方法注入-->
    <bean id="getSetMethodInjectTest" class="io.github.harvies.charon.tests.spring.inject.GetSetMethodInjectTest">
        <property name="name" value="nameTest"/>
    </bean>

    <!--静态工厂注入-->
    <bean name="staticFactoryInjectTest"
          class="io.github.harvies.charon.tests.spring.inject.staticfactory.StaticFactoryInjectTest">
        <!--使用静态工厂的方法注入对象,对应下面的配置文件-->
        <property name="staticFactoryDao" ref="staticFactoryDao"/>
    </bean>
    <!--此处获取对象的方式是从工厂类中获取静态方法-->
    <bean name="staticFactoryDao" class="io.github.harvies.charon.tests.spring.inject.staticfactory.DaoFactory"
          factory-method="getStaticFactoryDaoImpl"/>

    <!--实例工厂注入-->
    <bean name="instanceFactoryInjectTest"
          class="io.github.harvies.charon.tests.spring.inject.instancefactory.InstanceFactoryInjectTest">
        <!--使用实例工厂的方法注入对象,对应下面的配置文件-->
        <property name="factoryDao" ref="factoryDao"/>
    </bean>
    <!--此处获取对象的方式是从工厂类中获取实例方法-->
    <bean name="daoFactory" class="io.github.harvies.charon.tests.spring.inject.instancefactory.DaoFactory"/>
    <bean name="factoryDao" factory-bean="daoFactory"
          factory-method="getFactoryDaoImpl"/>

    <!-- 设置使用注解的类所在的包 -->
    <context:component-scan base-package="io.github.harvies.charon.tests.spring.*"/>

    <!-- 启动@aspectj的自动代理支持-->
    <aop:aspectj-autoproxy/>
</beans>
