charon.env=dev
charon.application.name=charon-shardingsphere-jdbc
logging.level.root=debug

spring.shardingsphere.datasource.names=ds0,ds1

## https://github.com/apache/shardingsphere/issues/8306
spring.shardingsphere.datasource.common.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.common.type=com.zaxxer.hikari.HikariDataSource

spring.shardingsphere.datasource.ds0.jdbc-url=jdbc:mysql://${charon.mysql.url}/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
spring.shardingsphere.datasource.ds0.username=${charon.mysql.username}
spring.shardingsphere.datasource.ds0.password=${charon.mysql.password}

spring.shardingsphere.datasource.ds1.jdbc-url=jdbc:mysql://${charon.mysql.url}/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
spring.shardingsphere.datasource.ds1.username=${charon.mysql.username}
spring.shardingsphere.datasource.ds1.password=${charon.mysql.password}

## t_user begin
spring.shardingsphere.rules.sharding.sharding-algorithms.database-user-inline.type=INLINE
## 1.as int是把浮点型转整形
## 2. /2 是为了让下表大于1的表落到1库,0/2=0,1/2=0,2/2=1,3/2=1
# snowflake介绍: https://shardingsphere.apache.org/document/current/cn/features/sharding/concept/key-generator/
spring.shardingsphere.rules.sharding.sharding-algorithms.database-user-inline.props.algorithm-expression=ds$->{id % 4 / 2 as int}
spring.shardingsphere.rules.sharding.sharding-algorithms.t-user-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.t-user-inline.props.algorithm-expression=t_user_$->{id % 4}

spring.shardingsphere.rules.sharding.tables.t_user.actual-data-nodes=ds0.t_user_${0..1},ds1.t_user_${2..3}
spring.shardingsphere.rules.sharding.tables.t_user.database-strategy.standard.sharding-column=id
spring.shardingsphere.rules.sharding.tables.t_user.table-strategy.standard.sharding-column=id
spring.shardingsphere.rules.sharding.tables.t_user.database-strategy.standard.sharding-algorithm-name=database-user-inline
spring.shardingsphere.rules.sharding.tables.t_user.table-strategy.standard.sharding-algorithm-name=t-user-inline

spring.shardingsphere.rules.sharding.tables.t_user.key-generate-strategy.column=id
spring.shardingsphere.rules.sharding.tables.t_user.key-generate-strategy.key-generator-name=snowflake
## t_user end

spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-column=user_id
spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-algorithm-name=database-inline
spring.shardingsphere.rules.sharding.binding-tables=t_order,t_order_item
spring.shardingsphere.rules.sharding.broadcast-tables=t_address

spring.shardingsphere.rules.sharding.tables.t_order.actual-data-nodes=ds$->{0..1}.t_order_$->{0..1}
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-column=order_id
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-algorithm-name=t-order-inline

spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.column=order_id
spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.key-generator-name=snowflake

spring.shardingsphere.rules.sharding.tables.t_order_item.actual-data-nodes=ds$->{0..1}.t_order_item_$->{0..1}
spring.shardingsphere.rules.sharding.tables.t_order_item.table-strategy.standard.sharding-column=order_id
spring.shardingsphere.rules.sharding.tables.t_order_item.table-strategy.standard.sharding-algorithm-name=t-order-item-inline

spring.shardingsphere.rules.sharding.tables.t_order_item.key-generate-strategy.column=order_item_id
spring.shardingsphere.rules.sharding.tables.t_order_item.key-generate-strategy.key-generator-name=snowflake

spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.props.algorithm-expression=ds$->{user_id % 2}
spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-inline.props.algorithm-expression=t_order_$->{order_id % 2}
spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-item-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-item-inline.props.algorithm-expression=t_order_item_$->{order_id % 2}

spring.shardingsphere.rules.sharding.key-generators.snowflake.type=SNOWFLAKE
spring.shardingsphere.rules.sharding.key-generators.snowflake.props.worker-id=123
spring.shardingsphere.rules.sharding.key-generators.snowflake.props.max-vibration-offset=16

## https://shardingsphere.apache.org/document/current/cn/user-manual/shardingsphere-jdbc/configuration/props/
spring.shardingsphere.props.sql-show=true

